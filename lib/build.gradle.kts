/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */
import org.gradle.api.tasks.testing.logging.TestLogEvent

version = "1.40"


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    groovy

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation("org.codehaus.groovy:groovy:3.0.9")

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation("org.spockframework:spock-core:2.0-groovy-3.0")
    testImplementation("junit:junit:4.13.2")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:30.1.1-jre")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

  //testLogging {
  //  events = setOf( TestLogEvent.PASSED, TestLogEvent.SKIPPED, TestLogEvent.FAILED )
  //}
}



tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
    var args = options.compilerArgs
    args.add( "-Xlint:all" )
}


tasks.withType<Jar> {
    archiveFileName.set( "${rootProject.name}.jar" )
}

tasks.withType<Javadoc> {
    title = rootProject.name
    //options.overview = "src/main/java/overview.html"
    exclude( "it/eez/accessors/**") 
}



tasks.jar {
    manifest {
        attributes( mapOf(
            "Implementation-Title" to rootProject.name,
            "Implementation-Version" to project.version
        ))
    }
    archiveBaseName.set(rootProject.name)
}