/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package com.stratic.tpl

import spock.lang.Specification

class LibraryTest extends Specification {

    def 'Pure static content'() {

        given: 'A template source code with static content'
            var content = 'Hello world'
            var tpl = tpl( content )
        
        when: 'The content is rendered'
            def result = tpl.toString()

        then: 'The result is identical to the initial content'
            result == content
    }
    
    def "Content with a variable value"() {

        given: 'A template with a variable'
            var tpl = tpl( 'Hello ${somebody}' )
        
        when: 'The content is populated'
            tpl.set( 'somebody', 'John')

        then: 'The result is the expected one'
            tpl.toString() == 'Hello John'
    }
    
    def 'Content with a sub template'() {

        given: 'A template with a sub template'
            var tpl = tpl( 'Hello <tag:john>John</tag:john>' )
        
        when: 'The content is populated'
            tpl
            .add( 'john' )

        then: 'The result is the expected one'
            tpl.toString() == 'Hello John'
    }      

    def 'Content with a sub template containing a variable'() {

        given: 'A template with a sub template'
            var content = 'Hello <tag:somebody>${name}</tag:somebody>'
            var tpl = tpl( content )
        
        when: 'The content is populated'
            tpl
            .add( 'somebody' )
            .set( 'name', 'John' )

        then: 'The result is the expected one'
            tpl.toString() == 'Hello John'
    }
    
    def 'Indented content'() {

        given: 'A template with a sub template and an indented tag'
            var tpl = tpl(
'''\
<tag:hello>Hello
World</tag:hello>\
------<indent><tag:indented/></indent>
'''                
            )
        
        when: 'The content is populated'
            tpl.add( 'indented', tpl.create( 'hello' ) )

        then: 'The result is the expected one'
            tpl.toString() ==
'''\
------Hello
------World
'''
    } 
        
    
    def tpl( String text ) {
        return FactoryLoader.getDefault()
            .create( "test", text )
            .create()
    }
}
